name: Build

on:
  # push:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 1

jobs:
  build-dependencies:
    strategy:
      matrix:
        name:
          - sdl2
          - x264
          - x265
          - ogg
          - vorbis
          - vmaf
          - winpthreads
          - aom
          - aac
          - frei0r
        host:
          - aarch64-w64-mingw32
        include:
          - name: sdl2
            repository: libsdl-org/SDL
            ref: SDL2
          - name: x264
          - name: x265
          - name: ogg
            repository: xiph/ogg
            ref: v1.3.5
          - name: vorbis
            repository: xiph/vorbis
            ref: v1.3.7
            depends: ogg
          - name: vmaf
            repository: Netflix/vmaf
            ref: v3.0.0
            depends: winpthreads
          - name: winpthreads
          - name: aom
            depends: vmaf
          - name: aac
            repository: mstorsjo/fdk-aac
            rev: v2.0.3
          - name: frei0r
            repository: dyne/frei0r
            rev: v2.3.3
    runs-on: ubuntu-latest
    container:
      image: mstorsjo/llvm-mingw:20241001
    steps:
      - uses: actions/checkout@v4
      - name: wait for dependencies
        timeout-minutes: 3
        uses: ./.github/actions/wait-artifact
        with:
          artifact: ${{matrix.depends}}-${{ matrix.host }}
          token: ${{ secrets.GITHUB_TOKEN }}
          download: false
        if: ${{matrix.depends != null}}
      - name: extract dependency
        uses: ./.github/actions/extract-artifact
        with:
          name: ${{matrix.depends}}-${{ matrix.host }}
          target: ${{ github.workspace }}
        if: ${{matrix.depends != null}}
      - uses: actions/checkout@v4
        with:
          repository: ${{ matrix.repository }}
          path: ${{ matrix.name }}
          ref: ${{ matrix.ref }}
        if: ${{ matrix.repository != null }}
      - name: build
        run: bash scripts/build-${{ matrix.name }}.sh "${{ github.workspace }}/local" "${{ matrix.host }}"
        shell: bash
      - name: archive
        uses: ./.github/actions/archive
        with:
          base-path: ${{ github.workspace }}
          source-path: local
          output-path: ${{ matrix.name }}-${{ matrix.host }}.tar.gz
      - name: upload-archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-${{ matrix.host }}
          path: ${{ matrix.name }}-${{ matrix.host }}.tar.gz
  build-ffmpeg:
    strategy:
      matrix:
        include:
          - host: aarch64-w64-mingw32
            arch: arm64
            os: mingw32
    runs-on: ubuntu-latest
    needs:
      - build-dependencies
    container:
      image: mstorsjo/llvm-mingw:20241001
    steps:
      - uses: actions/checkout@v4

      - name: get sdl2
        uses: ./.github/actions/extract-artifact
        with:
          name: sdl2-${{ matrix.host }}
          target: ${{ github.workspace }}
      - name: get x264
        uses: ./.github/actions/extract-artifact
        with:
          name: x264-${{ matrix.host }}
          target: ${{ github.workspace }}
      - name: get x265
        uses: ./.github/actions/extract-artifact
        with:
          name: x265-${{ matrix.host }}
          target: ${{ github.workspace }}
      - name: get ogg
        uses: ./.github/actions/extract-artifact
        with:
          name: ogg-${{ matrix.host }}
          target: ${{ github.workspace }}
      - name: get vorbis
        uses: ./.github/actions/extract-artifact
        with:
          name: vorbis-${{ matrix.host }}
          target: ${{ github.workspace }}
      - name: get vamf
        uses: ./.github/actions/extract-artifact
        with:
          name: vmaf-${{ matrix.host }}
          target: ${{ github.workspace }}
      - name: get winpthreads
        uses: ./.github/actions/extract-artifact
        with:
          name: winpthreads-${{ matrix.host }}
          target: ${{ github.workspace }}
      - name: get aom
        uses: ./.github/actions/extract-artifact
        with:
          name: aom-${{ matrix.host }}
          target: ${{ github.workspace }}
      - name: get aac
        uses: ./.github/actions/extract-artifact
        with:
          name: aac-${{ matrix.host }}
          target: ${{ github.workspace }}
      - name: get frei0r
        uses: ./.github/actions/extract-artifact
        with:
          name: frei0r-${{ matrix.host }}
          target: ${{ github.workspace }}

      - uses: actions/checkout@v4
        with:
          repository: FFmpeg/FFmpeg
          path: ffmpeg
      - name: build ffmpeg
        run: |
          # do not work check : https://trac.ffmpeg.org/wiki/HWAccelIntro#DXVA2
          # might need more than that
          # curl https://download.videolan.org/pub/contrib/dxva2api.h -o /opt/llvm-mingw/aarch64-w64-mingw32/include/dxva2api.h
          
          cd ffmpeg
          export PKG_CONFIG_LIBDIR=${{ github.workspace }}/local/lib/pkgconfig
          export CFLAGS="-I${{ github.workspace }}/local/include"
          ./configure \
            --pkg-config=/usr/bin/x86_64-pc-linux-gnu-pkg-config \
            --pkgconfigdir=${{ github.workspace }}/local/lib/pkgconfig \
            --cross-prefix=${{ matrix.host }}- \
            --arch=${{ matrix.arch }} \
            --target-os=${{ matrix.os }} \
            --enable-sdl \
            --disable-doc \
            --prefix=${{ github.workspace }}/local \
            --disable-static \
            --enable-shared \
            --enable-libx264 \
            --enable-libx265 \
            --enable-gpl \
            --enable-nonfree \
            --enable-libvorbis \
            --enable-version3 --enable-libvmaf \
            --disable-w32threads --enable-pthreads \
            --enable-libaom \
            --enable-libfdk-aac \
            --enable-frei0r
          make -j16
          make install
      - name: archive
        run: |
          mkdir output
          readlink -f output
          cp ${{ github.workspace }}/local/bin/*.exe ${{ github.workspace }}/local/bin/*.dll output
          # tar cfz all.tar.gz ${{ github.workspace }}/local/bin
          cd output
          zip -r -D ../ffmpeg-${{ matrix.os}}-${{ matrix.arch }}.zip .
      - name: upload-archive
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-${{ matrix.host }}
          path: ffmpeg-${{ matrix.os }}-${{ matrix.arch }}.zip
  update-release:
    strategy:
      matrix:
        include:
          - host: aarch64-w64-mingw32
            arch: arm64
            os: mingw32
    runs-on: ubuntu-latest
    needs:
      - build-ffmpeg
    steps:
      - name: get ffmpeg
        uses: actions/download-artifact@v4
        with:
          name: ffmpeg-${{ matrix.host }}
      - uses: IsaacShelton/update-existing-release@v1.3.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ffmpeg-${{ matrix.os }}-${{ matrix.arch }}.zip
  cleanup:
    runs-on: ubuntu-latest
    needs:
      - update-release
    steps:
      - name: list
        id: list_artifacts
        uses: MichaelMelena/list-artifacts@v1
      - name: cleanup
        uses: MichaelMelena/remove-artifacts@v1
        with:
          artifacts: ${{ steps.list_artifacts.outputs.artifacts }}
